--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,w,w)local w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=92,62,41,49,72,41,77,61,98,98,57,29,62,84,28,13,35,91,67,65,64,26,42,20,91,17,53,28,38,21,45,95,58,23,65,80,64,14,28,21,48,53,90,85,30,67,69,19,87,69,16,29 while w~=69 do if x>=623 then if x<=910 then if x>=764 then if x<=814 then if x<=764 then x=791 do bz=function(cl,cm,cn,co,co,co)local co,cp,cq=45,65,38,80,62,75,25,66,29,12,23,79 while co~=29 do if cp<=104 then if cp>=89 then if cp>94 then cq=((cm/bc[cl])%bc[cn])cp=137 else cq=nil cp=104 end else cq=nil cp=89 end else if cp>=154 then if cp<199 then cp=201 return cq else break end else cq=(cq-cq%1)cp=154 end end end end end else if x<812 then x=814 bf=(bit_lib and bit_lib.bxor or function(cl,cm)cl=cl%(2^32)cm=cm%(2^32)local cn,co=0,1 while cl>0 and cm>0 do local c,cp=cl%c,cm%16 cn=cn+bv[c+1][cp+1]*co cl=(cl-c)/16 cm=(cm-cp)/16 co=co*16 end cn=cn+cl*co+cm*co return cn end)else bk=function(c,cl,cm,cn,cn)local cn cn=((c/2^(cl-1))%2^((cm-1)-(cl-1)+1))return(cn-cn%1);end x=843 end end else if x<=843 then x=873 cc=1 else if x>880 then ce=function()local c c=bw(cd,cc,cc)cc=(cc+1);return c;end x=958 else x=910 br=function()local c,cl,cm,cn c,cl,cm,cn=bw(cd,cc,(cc+3))cc=(cc+4);return((cn*16777216)+(cm*65536)+(cl*q)+c);end end end end else if x>=686 then if x>=701 then if x>703 then for c=1,31 do do bc[c]=y end y=(y*2)end x=764 else x=725 y=2 end else x=701 bc={[n]=1}end else if x>627 then x=686 bl=(2^52)else bi=''x=659 end end end else if x>=1089 then if x<=1150 then if x>=1132 then if x<1144 then cb={}x=1150 else do bx={}end x=1177 end else x=1132 bj=function(c,n,n,n)local n,q,cl,cm,cn,co,cp,cq=98,77,24,98,60,80,70,64,91,13,43,61,17,68,19,29,26,77,75,10,85,19,95 while n~=51 do if q>=347 then if q<=440 then if q>=416 then if q>421 then for n=1,cq do local cr,cs,ct,cu=70,40,39,99,59,70,26,63,98,93,57,49,48,20 while cr~=30 do if cs>=153 then if cs<=153 then if(1==ct)then do cu=(0~=ce());end elseif(2==ct)then cu=ck();elseif(not(ct~=3))then cu=bs();elseif(not(ct~=0))then cu=c[bs()];end;cs=197 else if cs>203 then break else cs=239 co[n]=cu;end end else if cs>=76 then if cs>84 then cu=nil cs=153 else do ct=ce()end cs=113 end else cs=76 ct,cu=nil end end end end q=475 else q=440 do co={}end end else if q<384 then cl[10]=cp;q=390 else cq=br()q=416 end end else if q<=497 then if q<488 then q=497 cl[169]=co else q=528 for c=1,br()do local n,cr,cs,ct,cu,cv=74,37,22,71,64,48,42,79,30,62,18,73,10,69,24,89,11,79,55,55,51,96,60,14,89 while n~=43 do if cr<=291 then if cr>=154 then if cr<=175 then if cr<171 then if 1==ce()then for cw=1,ce()do cu[21][cw]={ce()==0,br()}end end cr=175 else cs=br()cr=224 end else if cr>=258 then if cr>263 then do cu[73]=ct end cr=340 else cr=291 ct=bk(cs,1,2)end else cr=258 do cv=br()end end end else if cr<=85 then if cr>44 then cr=101 cu={{},nil}else cs,ct,cu,cv=nil cr=85 end else if cr<124 then cu[168]=ce();cr=127 else cr=154 cu[21]={};end end end else if cr<=421 then if cr<=359 then if cr<355 then cr=359 cu[33]=bk(cv,1,11);else cu[127]=bk(cs,3,11);cr=390 end else if cr>396 then cr=453 cu[149]=bk(cs,21,29);else cr=421 cu[62]=bk(cv,12,l);end end else if cr<=471 then if cr>461 then cr=490 cu[121]=-cu[127]else cu[117]=bk(cs,12,20);cr=471 end else if cr<=490 then do cu[61]=-cu[149]end cr=510 else if cr<518 then cr=526 cm[c]=cu;else n=43;end end end end end end end end else if q<=528 then q=546 cl[158]=cm;else if q<564 then q=566 return cl;else break end end end end else if q<=188 then if q>=142 then if q<179 then cp={}q=188 else q=203 cl={}end else if q>82 then do cm={}end q=142 else cl,cm,cn,co,cp,cq=nil q=114 end end else if q>=283 then if q>286 then q=347 for c=1,br()do cp[c-1]=bj();end else cl[126]=ce();q=302 end else if q>212 then q=283 for c=(#be+1),(#be+cn)do local l,n,cl,cm,co=92,33,12,57,55,27,83,60,58,56,58,63,71,65,30,96,46,39,63,87,15,29 while l~=54 do if n>=275 then if n<=401 then if n<=310 then if n<306 then n=310 cm[127]=bk(co,3,11);else n=355 cm[83]=bk(co,12,20);end else if n>362 then n=418 do cm[62]=bk(cl,12,33);end else n=401 cm[149]=bk(co,21,29);end end else if n>=488 then if n<498 then n=504 be[c]=cm;else break end else if n>427 then cm[61]=-cm[149]n=488 else n=442 cm[121]=-cm[127]end end end else if n<=141 then if n>=93 then if n>102 then do co=br()end n=157 else n=141 cm[168]=ce();end else if n>40 then n=93 cm={}else cl,cm,co=nil n=53 end end else if n>=217 then if n<248 then cm[73]=bk(co,1,2);n=252 else cm[33]=bk(cl,1,11);n=275 end else if n<171 then cl=br()n=179 else n=217 do cm[117]=ce();end end end end end end end else q=251 cn=br()end end end end end end end else if x>=1215 then if x>1222 then w=69;else x=1234 return cg(bj(bp()),{},bp())();end else cg=function(c,l,n,q,q)local q,w,cl,cm,cn cm=c[158]w=c[126]cl=c[169]cn=c[10]do q=cb end do return function(...)local c,q,co,cp,cq,cr,cs,ct,cu cq=1 cu=-1 co=-1 ct={}cr={...}c=(cj('#',...)-1)cs={}q={}do for co=0,c do if(not(co<w))then ct[(co-w)]=cr[(co+1)];else q[co]=cr[(co+1)];end;end;end cp=(c-w+1)do while true do local co,cp,cv,cw,cx,cy,cz,da,db,dc dc=cm[cq]do co=dc[33]end cv=dc[168]do cw=dc[127]end cz=dc[83]da=dc[149]cp=dc[117]cx=dc[121]db=dc[62]cy=dc[61]if not(co>46)then if not(dc[33]>22)then if not(co>10)then if not(dc[33]<5)then do if not(co>7)then if not(dc[33]>5)then while not q[dc[127]]do cq=db;break end else do if not(co~=6)then if((q[dc[127]]<q[da]))then cq=db;end;else do q[cw][q[db]]=q[da];end end end end else if not(co<9)then do if(co<p)then q[cw]=(q[db]+q[da]);else local p,cv cv,p=bt(...)for p=1,cw do q[(p-1)]=cv[p]end end end elseif((q[cw]>q[da]))then cq=db;end end end else if not(co>1)then do if not(co~=0)then if cw then do dc[127]=false;end da=dc[62];do cq=(cq-1);end else cq=(cq+db+da);end else local p,cv,dd p=cw cv=q[(p+2)]dd=(q[p]+cv)q[p]=dd;do if((cv>0))then do while((dd<=q[p+1]))do cq=db;q[p+3]=dd;break end end elseif(not(dd<q[p+1]))then cq=db;q[(p+3)]=dd;end end end end else do if not(co<3)then if(co>3)then q[cy]();else do do return q[cx][cp]end end end else local p,cv p=db cv=q[p]do for dd=(p+1),da do cv=(cv..q[dd]);end;end q[cw]=cv;end end end end else if not(co>16)then if not(co<14)then do if not(co>14)then cq=((cl[cw]~=cl[da])and db or cq)else if(co>15)then cl=cb[cw](cl)else q[cw]=(q[db]*cl[da]);end end end else if not(co<12)then if(co>12)then q={};for p=0,c do if(p<w)then q[p]=cr[(p+1)];else break end;end;else local c do c=cw end do return q[c](bn(q,(c+1),db))end;end else do q[dc[61]]=(function()q[cw]=cg(cn[cz],nil,n);end)end end end else if not(co<20)then if not(co<i)then if(co>21)then local c c={}do if(#cs>0)then do for i=1,#cs do local p p=cs[i]for i=0,#p do local w,cr,cv w=p[i]do cr=w[1]end cv=w[2]if(cr==q and cv>=0)then do c[cv]=cr[cv]end w[1]=c end end end end end end do return q[(cw+2)],q[cw];end else q[cw]=(q[db]-q[da]);end else q[dc[127]]={};end else do if not(co<18)then do if not(dc[33]~=18)then local c,i,p do p=cw end i={q[p](bn(q,p+1,db))}c=0 for w=p,da do c=(c+1);q[w]=i[c];end else cb[cw]=cb[cz]end end else do cm[cq]={[127]=2,[33]=dc[33]- -16,[62]=88,[117]=0,[149]=1};end do cq=(cq-1);end end end end end end else do if not(co<35)then if not(co<41)then if not(co>43)then if not(co>41)then if(not(q[cw]~=cl[da]))then cq=db;end;else if(co<43)then local c,i c=cw i=q[db]q[(c+1)]=i;q[c]=i[q[da]];else n[cl[db]]=q[cw];end end else do if not(co>44)then local c c=cw q[c](q[(c+1)])else if(co<46)then q[dc[127]]=q[db][q[da]];else q[cw]=n[cl[db]][cl[da]];end end end end else if not(co>37)then if not(co>35)then if(not(q[cw]==q[da]))then cq=db;end;else if(dc[33]<37)then cq=db;else do cm[cq]=be[cp];end cq=db;end end else do if not(co>38)then cu=dc[cw];else if(co<40)then q[cw]=cg(cn[db],nil,n);else q[dc[127]]=(q[db]%cl[da]);end end end end end else do if not(co>28)then do if not(co<26)then if not(co<27)then do if(co>27)then n=q[dc[cw]]else local c,i c=cw i={}do for p=1,#cs do local w do w=cs[p]end for p=0,#w do local cr,cv,dd do dd=w[p]end do cr=dd[1]end do cv=dd[2]end do if(cr==q and cv>=c)then i[cv]=cr[cv];dd[1]=i;end;end end;end;end end end else cb[cw]=q[dc[83]]end else do if not(co<24)then if not(dc[33]~=24)then local c,i do c=cw end i=db for p=c,i do q[p]=ct[(p-c)];end;else q[cy]=(function()q[cw]=cg(cn[cz],nil,n);end)end else do q[cw]=(q[db]*q[da]);end end end end end else if not(co<32)then do if not(co>32)then else if not(co~=33)then if q[cw]then cq=db;end;else local c c=q[cx][cp]do q[dc[121]][cp]=(c..q[da]);end end end end else if not(co>29)then if((cl[cw]<q[da]))then cq=db;end;else if(co<31)then q[cw][cl[dc[62]]]=cl[da];else do while not q[da]do q[cw]=q[da];cq=db;break end end end end end end end end end end else if not(co<71)then if not(co>82)then if not(co>76)then if not(co<74)then if not(co<75)then do if(co>75)then local c do c=cw end q[c]=q[c](bn(q,c+1,dc[62]));else local c,i,p do c=cw end p=q[c]i=q[(c+2)]if((i>0))then if((p>q[c+1]))then cq=db;else q[(c+3)]=p;end elseif((p<q[c+1]))then cq=dc[62];else q[(c+3)]=p;end end end else do cb=q end end else if not(dc[33]<72)then do if not(co~=72)then q[cw]=(not(db==0));cq=(cq+1);else if(not(q[cw]<q[da]))then cq=dc[62];end;end end else q[cw]=n[cl[db]];end end else do if not(co<80)then do if not(co>80)then local c,i,n,p c=cw n=((da-1)*50)do i=q[c]end p=db do for w=1,p do i[(n+w)]=q[(c+w)]end;end else if(co>81)then do l[db]=q[dc[127]];end else cq=((q[cw]<q[da])and dc[62]or cq)end end end else if not(co>77)then q[cw]();else if s==co then local c,i do c=cw end do i=q[db]end q[(c+1)]=i;q[c]=i[cl[da]];else do q[cw]=cb[cz]end end end end end end else if not(co>88)then do if not(co<86)then if not(dc[33]>86)then do q[cw]=(q[dc[62]]%q[da]);end else if not(co~=87)then local c c=cw do do return bn(q,c,(c+db))end;end else q[cw]=(q[db]/q[da]);end end else if not(co>83)then q[cw]=nil;else if(co<85)then q[cw]=(q[db]/cl[da]);else q[dc[cw]]=q end end end end else if not(co<92)then do if not(co<93)then do if(co>93)then do cb[cw]={}end else q[cw]=q[db]end end else q[cw]=cl[dc[62]]end end else if not(co>89)then local c c=cw q[c](bn(q,(c+1),db))else if(co<91)then q[cw]=l[db];else do for c=cw,dc[62]do q[c]=nil;end;end end end end end end else if not(co>58)then if not(co<53)then do if not(co<56)then if not(co>56)then local c c=cw q[c]=q[c]();else if(co>57)then q[cw]=(q[db]^q[da]);else q[cw]=q[dc[62]];end end else if not(co<54)then if 54==co then local c,i c=cw i={}if(#cs>0)then for l=1,#cs do local n do n=cs[l]end for l=0,#n do local p,s,w p=n[l]w=p[e]s=p[2]if(w==q and s>=0)then i[s]=w[s]do p[1]=i end end end end end return bn(q,c,cu);else local c,e,i,l,n e=cw i=da n=(e+2)do l={q[e](q[e+1],q[n])}end for p=1,i do do q[(n+p)]=l[p]end end c=q[(e+3)]if c then q[n]=c else do cq=db;end end;end else do q[cw]=#q[db];end end end end else if not(co>49)then if not(co<48)then if(co>48)then q[cw]=(q[db]+cl[da]);else q[cw]=q[db][cl[da]];end else q[dc[127]]=(not q[db]);end else do if not(co<51)then if(co>51)then local c c=cw q[c]=q[c](bn(q,c+1,cu));else local c c=cw q[c]=q[c](q[c+1]);end else end end end end else if not(co<65)then if not(co<68)then if not(co>68)then q[cw]=-q[db];else if(co>69)then do return q[cw]end else local c,e,i,l e=cw i,c=bt(q[e](bn(q,(e+1),db)))cu=(c+e-1)l=0 for c=e,cu do l=(l+1);do q[c]=i[l];end end;end end else do if not(co>65)then cm[cq]={[33]=co- -6,[127]=1,[62]=1,[117]=0,[149]=0};cq=(cq-1);else if 66==co then cm[cq]={[62]=1,[127]=2,[33]=co-10,[149]=2,[117]=0};cq=(cq-1);else q[cw]=cb[cz]end end end end else do if not(co>61)then if not(co>d)then cq=((cl[cw]==cl[da])and db or cq)else do if not(co~=60)then else cm[cq]=be[cp];cq=db;end end end else do if not(co<63)then if(co>63)then cb[cw]()else if(cl[dc[149]]~=q[dc[127]])then cq=db;end;end else do cq=((cl[cw]<q[da])and db or cq)end end end end end end end end end cq=(cq+1);end;end end;end end x=1215 end end else if x>=1033 then if x<=1033 then bs=function(c,c,c)local c,d,e,i=81,60,15,84,82,20,53,97,26,84,96,43,46,80,46,18 while c~=38 do if d<=133 then if d>=93 then if d>102 then d=177 e=cd:sub(cc,(cc+i-1))else i=br()d=133 end else e,i=nil d=93 end else if d>=218 then if d<227 then d=235 do return e;end else c=38;end else d=218 cc=(cc+i);end end end end x=1055 else if x>1062 then be={}x=1089 else x=1072 bt=function(...)return{...},cj('#',...)end end end else if x>964 then ck=function()local c,d,e,i,l,n,p,q=82,65,79,27,55,57,65,70,15,79,98,10,43,52,17,32,90,85 while c~=40 do if d<=212 then if d<=98 then if d>74 then p=br()d=134 else e,i,l,n,p,q=nil d=98 end else if d<=134 then i=br()d=179 else if d>187 then d=245 e=((-1)^bz(31,i,1))else d=212 if((p==0 and i==0))then return 0 end end end end else if d<=306 then if d<=245 then n=bz(20,i,11)d=264 else if d>270 then do l=1 end d=343 else d=306 q=(bz(k,i,20)*4294967296+p)end end else if d>=379 then if d>381 then c=40;else d=401 do return(e*(2^(n-1023))*(q/bl+l))end end else d=379 if not(n~=0)then if 0~=q then do n=1 end l=a else do return(e*0)end end elseif not(n==2047)then else if not(q~=h)then do return(e*(0/0))end else do return(e*(1/0))end end end end end end end end x=1033 else ca=function()local a,c a,c=bw(cd,cc,(cc+2))cc=(cc+2);do return((c*256)+a);end end x=1000 end end end end else if x>=309 then if x>=457 then if x>=533 then if x>=550 then if x>555 then x=623 bv={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,v,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,g,0,3,2,13,12,15,14,9,8,11,10,},{6,o,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,b,2,1,0,15,14,13,12,11,10,9,8,},{f,9,10,11,12,t,14,15,0,1,2,3,4,5,6,m,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,j,14,15,u,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,r,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}else cd=bdfunction(a,b,b,b)return bo[bb(a,16)]end)x=577 end else x=550 for a=0,255 do bo[a]=bg(a);end end else if x<=457 then bn=(unpack or table.unpack)x=480 else if x<491 then x=500 bb=tonumber else x=533 do bo={}end end end end else if x<=334 then if x>316 then ch=type x=370 else cj=select x=334 end else if x>=401 then if x<420 then z=math.abs x=425 else bq=math.floor x=457 end else x=401 bu=(function(a,b)if'number'==ch(a)then return true else return false end end)end end end else if x>=186 then if x<=224 then if x>=207 then if x<215 then x=224 bh=table.concat else x=247 by=table.insert end else cf=string.rep x=207 end else if x<=247 then bm=math.ldexp x=265 else if x<275 then x=282 bp=(getfenv or function()return _ENV end)else ba=setmetatable x=309 end end end else if x>=127 then if x<=127 then x=144 do bg=string.char end else if x>146 then bd=string.gsub x=186 else ci=string.sub x=169 end end else if x<106 then y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=nil x=108 else x=127 do bw=string.byte end end end end end end end end)(0,3,16,59,1,8,1,0,21,13,0,33,7,0,7,10,256,5,78,13,8,0)end
